{"version":3,"sources":["components/Comment.js","components/CommentsList.js","components/Authors.js","components/Post.js","components/PostList.js","API_DATA.js","App.js","index.js"],"names":["Comment","props","react_default","a","createElement","className","comment","body","name","email","CommentsList","state","commentLoaded","handleShowComments","_this","setState","prevState","comments","this","postComment","map","src_components_Comment","key","id","type","onClick","React","Component","Authors","address","Object","values","user","filter","item","join","username","Post","post","title","src_components_Authors","src_components_CommentsList","postComments","PostList","loadButton","isLoaded","handleClick","isLoading","postBlock","postWithUsersAndComments","src_components_Post","placeholder","onChange","handlePostFilter","value","filterValue","getPosts","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","postsFetch","posts","usersFetch","users","commentsFetch","wrap","_context","prev","next","fetch","concat","sent","json","objectSpread","find","userId","postId","abrupt","stop","apply","arguments","App","postWithUsersAndCommentsOrigin","event","target","toConsumableArray","includes","src_components_PostList","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.d2443429.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Comment.css';\n\nconst Comment = props => (\n  <div className=\"post_comment\">\n    <p className=\"post__comment-body\">{props.comment.body}</p>\n    <p className=\"post__comment-author\">\n      <span>{props.comment.name}</span>\n      <span>{props.comment.email}</span>\n    </p>\n  </div>\n);\n\nComment.propTypes = {\n  comment: PropTypes.shape({\n    body: PropTypes.string,\n    name: PropTypes.string,\n    email: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Comment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Comment from './Comment';\nimport './CommentsList.css';\n\nclass CommentsList extends React.Component {\n  state = {\n    commentLoaded: false,\n  }\n\n  handleShowComments = () => {\n    this.setState(prevState => ({\n      commentLoaded: !prevState.commentLoaded,\n    }));\n  }\n\n  render() {\n    const { comments } = this.props;\n\n    const postComment = this.state.commentLoaded\n      && comments.map(comment => (\n        <Comment key={comment.id} comment={comment} />\n      ));\n\n    return (\n      <div className=\"post__comment-list\">\n        <div className=\"post__comment-list-header\">\n          <h4>Comments</h4>\n          <button\n            type=\"button\"\n            name=\"isLoadComments\"\n            className=\"comments_button\"\n            onClick={this.handleShowComments}\n          >\n            Show Comments\n          </button>\n        </div>\n\n        {postComment}\n      </div>\n    );\n  }\n}\n\nCommentsList.propTypes = {\n  comments: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\nexport default CommentsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Authors.css';\n\nconst Authors = (props) => {\n  const address = Object.values(props.user.address)\n    .filter(item => typeof item !== 'object')\n    .join(', ');\n\n  return (\n    <p className=\"post___author\">\n      <span>{props.user.username}</span>\n      <span>{props.user.email}</span>\n      <span>{address}</span>\n    </p>\n  );\n};\n\nAuthors.propTypes = {\n  user: PropTypes.shape({\n    username: PropTypes.string,\n    email: PropTypes.string,\n    address: PropTypes.object,\n  }).isRequired,\n};\n\nexport default Authors;\n","\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport CommentsList from './CommentsList';\nimport Authors from './Authors';\n\nimport './Post.css';\n\nconst Post = props => (\n  <section className=\"post\">\n    <h3 className=\"post__header\">{props.post.title}</h3>\n\n    <div className=\"post__content-wrapper\">\n      <p className=\"post__body\">\n        {props.post.body}\n      </p>\n\n      <Authors\n        key={props.post.user.id}\n        user={props.post.user}\n      />\n\n      <CommentsList\n        comments={props.post.postComments}\n      />\n    </div>\n  </section>\n);\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    title: PropTypes.string,\n    body: PropTypes.string,\n    user: PropTypes.object,\n    postComments: PropTypes.array,\n  }).isRequired,\n};\n\nexport default Post;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Post from './Post';\nimport './PostList.css';\n\nconst PostList = (props) => {\n  const loadButton = props.isLoaded\n      || (\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={props.handleClick}\n        >\n          {props.isLoading ? 'Loaidng...' : 'Load Posts'}\n        </button>\n      );\n\n  const postBlock = props.isLoaded\n    && props.postWithUsersAndComments.map(post => (\n      <Post\n        key={post.id}\n        post={post}\n      />\n    ));\n\n  const filter = props.isLoaded\n    && (\n      <input\n        className=\"post__filter\"\n        type=\"text\"\n        placeholder=\"filter by title or posts text\"\n        onChange={props.handlePostFilter}\n        value={props.filterValue}\n      />\n    );\n\n  return (\n    <div className=\"post-list\">\n      <h1>Dynamic list of posts</h1>\n      {loadButton}\n      {filter}\n      {postBlock}\n    </div>\n  );\n};\n\nPostList.propTypes = {\n  postWithUsersAndComments: PropTypes.arrayOf(PropTypes.object).isRequired,\n  isLoaded: PropTypes.bool.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  handlePostFilter: PropTypes.func.isRequired,\n  filterValue: PropTypes.string.isRequired,\n};\n\nexport default PostList;\n","const getPosts = async() => {\n  const url = 'https://jsonplaceholder.typicode.com';\n\n  const postsFetch = await fetch(`${url}/posts`);\n  const posts = await postsFetch.json();\n\n  const usersFetch = await fetch(`${url}/users`);\n  const users = await usersFetch.json();\n\n  const commentsFetch = await fetch(`${url}/comments`);\n  const comments = await commentsFetch.json();\n\n  const postWithUsersAndComments = posts.map(post => (\n    {\n      ...post,\n      user: users.find(user => user.id === post.userId),\n      postComments: comments.filter(comment => comment.postId === post.id),\n    }\n  ));\n\n  return postWithUsersAndComments;\n};\n\nexport default getPosts;\n","import React from 'react';\nimport './App.css';\nimport PostList from './components/PostList';\nimport getPosts from './API_DATA';\n\nclass App extends React.Component {\n  state={\n    postWithUsersAndComments: [],\n    postWithUsersAndCommentsOrigin: [],\n\n    isLoading: false,\n    isLoaded: false,\n    filterValue: '',\n  }\n\n  handleClick = async() => {\n    this.setState({\n      isLoading: true,\n    });\n\n    const posts = await getPosts();\n\n    this.setState({\n      postWithUsersAndComments: posts,\n      postWithUsersAndCommentsOrigin: posts,\n      isLoading: false,\n      isLoaded: true,\n    });\n  }\n\n  handlePostFilter = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      filterValue: value,\n    });\n\n    this.setState(prevState => ({\n      postWithUsersAndComments: [...prevState.postWithUsersAndCommentsOrigin]\n        .filter(item => [item.title, item.body].join(' ').includes(value)),\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <PostList\n          postWithUsersAndComments={this.state.postWithUsersAndComments}\n          isLoading={this.state.isLoading}\n          isLoaded={this.state.isLoaded}\n          handleClick={this.handleClick}\n          handlePostFilter={this.handlePostFilter}\n          filterValue={this.state.filterValue}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}